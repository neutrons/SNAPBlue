[project]
name = "snapblue"
description = "Instrument Scientist Scripting Interface into SNAPRed"
dynamic = ["version"]
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["neutrons", "example", "python"]
readme = "README.md"
dependencies = []
    # PyPI dependencies

[project.urls]
homepage = "https://github.com/neutrons/python_project_template/"  # if no homepage, use repo url
repository = "https://github.com/neutrons/python_project_template/"
# documentation = add_url_to_readthedoc_here
issues = "https://github.com/neutrons/python_project_template/issues"

[build-system]
requires = [
  "setuptools>= 42",
  "wheel",
  "toml",
  "versioningit"
]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.1.0"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "src/snapblue/_version.py"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "scripts*", "docs*", "notebooks*"]

[tool.setuptools.package-data]
"*" = ["*.yml","*.yaml","*.ini"]

[project.scripts]
packagename-cli = "packagenamepy.packagename:main"

[project.gui-scripts]
packagenamepy = "packagenamepy.packagename:gui"

[tool.pytest.ini_options]
addopts = "-v --cov=packagenamepy --cov-report=term-missing"
pythonpath = [
  ".", "src", "scripts"
]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [".git", "tmp*", "_tmp*", "__pycache__", "*dataset*", "*data_set*"]
markers = [
    "mymarker: example markers goes here"
]

[tool.ruff]
line-length = 120
select = ["A", "ARG","ASYNC","BLE","C90", "E", "F", "I", "N", "UP032", "W"]

# Pixi configuration
[tool.pixi.project]
authors = ["Michael Walsh <walshmm@ornl.gov>"]
channels = ["conda-forge", "mantid/label/nightly", "mantid-ornl", "mantid-ornl/label/rc", "neutrons/label/rc"]
name = "SNAPBlue"
platforms = ["linux-64"]
version = "0.1.0"


[tool.pixi.pypi-dependencies]
snapblue = { path = ".", editable = true }
bm3d-streak-removal = "*"
pytest-playwright = "*"

[tool.pixi.tasks]
# PyPi packaging tasks
build-pypi = { cmd = "python -m build", description = "Build the package for PyPI" }
publish-pypi = { cmd = "twine upload dist/*", description = "Publish the package to PyPI", depends-on = ["build-pypi"] }
clean-pypi = { cmd = "rm -rf dist", description = "Clean the PyPI build artifacts" }
# Conda packaging tasks
# NOTE: for build-conda to work locally, you need to set pixi to use detached-environments, i.e. pixi config set detached-environments true
#       this is because the conda build will complain about build environment in source and refuse to build.
build-conda = { cmd = "cd conda.recipe && VERSION=$(versioningit ../) conda mambabuild --channel conda-forge --channel mantid/label/nightly --channel mantid-ornl --channel mantid-ornl/label/rc --channel neutrons/label/rc --output-folder . .", description = "Build the package for conda" }
verify-conda = { cmd = "conda verify conda.recipe/noarch/*.tar.bz2", description = "Verify the conda package", depends-on = ["build-conda"] }
publish-conda = { cmd = "anaconda upload conda.recipe/noarch/*/*.tar.bz2", description = "Publish the package to conda", depends-on = ["verify-conda"] }
clean-conda = { cmd = "sh -c \"find conda.recipe/* ! -name 'meta.yaml' -exec rm -rf {} +\"", description = "Clean the conda build artifacts" }
# Documentation tasks
build-docs = { cmd = "sphinx-build -b html docs docs/_build", description = "Build the documentation" }
clean-docs = { cmd = "rm -rf docs/_build", description = "Clean the documentation build artifacts" }
# Testing tasks
test = { cmd = "pytest", description = "Run the tests" }  # pytest config above takes care of the arguments
# Clean all
clean-all = { description = "Clean all build artifacts", depends-on = ["clean-pypi", "clean-conda", "clean-docs"] }

[tool.pixi.dependencies]
snapred = "==1.1.0rc4"
python = ">=3.8"
versioningit = "*"
numpy = "*"
pandas = "*"
matplotlib = "*"
jupyterlab = "*"
ipympl = "*"
pre-commit = "*"
libmamba = "*"
libarchive = "*"
anaconda-client = "*"
boa = "*"
conda-build = "<4"
conda-verify = "*"
python-build = "*"
twine = "*"
sphinx = "*"
sphinx_rtd_theme = "*"
myst-parser = "*"
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
pip = "*"
